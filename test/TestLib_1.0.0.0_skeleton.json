{
  "name": "TestLib",
  "version": "1.0.0.0",
  "namespaces": {
    "TestLib": {
      "name": "TestLib",
      "types": {
        "TestLib.ClassThatsAbstract": {
          "type": "class",
          "name": "ClassThatsAbstract",
          "namespace": "TestLib",
          "abstract": true,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithConstructors": {
          "type": "class",
          "name": "ClassWithConstructors",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithConstructors.__init__()": {
              "declaring_type": "TestLib.ClassWithConstructors",
              "parameters": []
            },
            "TestLib.ClassWithConstructors.__init__(System.Int32)": {
              "declaring_type": "TestLib.ClassWithConstructors",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ]
            },
            "TestLib.ClassWithConstructors.__init__(System.Int32, System.Int32)": {
              "declaring_type": "TestLib.ClassWithConstructors",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ]
            },
            "TestLib.ClassWithConstructors.__init__(System.Int32, System.Int32, System.Int32)": {
              "declaring_type": "TestLib.ClassWithConstructors",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param2",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ]
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithEvents": {
          "type": "class",
          "name": "ClassWithEvents",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithEvents.__init__()": {
              "declaring_type": "TestLib.ClassWithEvents",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {
            "TestLib.ClassWithEvents.Event": {
              "name": "Event",
              "declaring_type": "TestLib.ClassWithEvents",
              "type": "System.EventHandler"
            },
            "TestLib.ClassWithEvents.EventWithArgs": {
              "name": "EventWithArgs",
              "declaring_type": "TestLib.ClassWithEvents",
              "type": "System.EventHandler[System.EventArgs]"
            }
          },
          "nested": {}
        },
        "TestLib.ClassWithFields": {
          "type": "class",
          "name": "ClassWithFields",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {
            "TestLib.ClassWithFields.InstanceFieldA": {
              "name": "InstanceFieldA",
              "declaring_type": "TestLib.ClassWithFields",
              "return_type": "System.Int32",
              "static": false
            },
            "TestLib.ClassWithFields.InstanceFieldB": {
              "name": "InstanceFieldB",
              "declaring_type": "TestLib.ClassWithFields",
              "return_type": "System.Int32",
              "static": false
            },
            "TestLib.ClassWithFields.InstanceFieldC": {
              "name": "InstanceFieldC",
              "declaring_type": "TestLib.ClassWithFields",
              "return_type": "System.Int32",
              "static": false
            },
            "TestLib.ClassWithFields.StaticFieldA": {
              "name": "StaticFieldA",
              "declaring_type": "TestLib.ClassWithFields",
              "return_type": "System.Int32",
              "static": true
            },
            "TestLib.ClassWithFields.StaticFieldB": {
              "name": "StaticFieldB",
              "declaring_type": "TestLib.ClassWithFields",
              "return_type": "System.Int32",
              "static": true
            },
            "TestLib.ClassWithFields.StaticFieldC": {
              "name": "StaticFieldC",
              "declaring_type": "TestLib.ClassWithFields",
              "return_type": "System.Int32",
              "static": true
            }
          },
          "constructors": {
            "TestLib.ClassWithFields.__init__()": {
              "declaring_type": "TestLib.ClassWithFields",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithGeneric[$T]": {
          "type": "class",
          "name": "ClassWithGeneric",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [
            "$T"
          ],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithGeneric[$T].__init__()": {
              "declaring_type": "TestLib.ClassWithGeneric[$T]",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "TestLib.ClassWithGeneric[$T].MethodWithGeneric($T)": {
              "name": "MethodWithGeneric",
              "declaring_type": "TestLib.ClassWithGeneric[$T]",
              "parameters": [
                {
                  "name": "param0",
                  "type": "$T",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithInterface": {
          "type": "class",
          "name": "ClassWithInterface",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [
            "System.IEquatable[TestLib.ClassWithInterface]"
          ],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithInterface.__init__()": {
              "declaring_type": "TestLib.ClassWithInterface",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.IEquatable[$T].Equals(TestLib.ClassWithInterface)": {
              "name": "Equals",
              "declaring_type": "System.IEquatable[$T]",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithInterface",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithListMethods": {
          "type": "class",
          "name": "ClassWithListMethods",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [
            "System.Collections.Generic.ICollection[System.Int32]",
            "System.Collections.Generic.IEnumerable[System.Int32]",
            "System.Collections.Generic.IList[System.Int32]",
            "System.Collections.IEnumerable"
          ],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithListMethods.__init__()": {
              "declaring_type": "TestLib.ClassWithListMethods",
              "parameters": []
            }
          },
          "properties": {
            "System.Collections.Generic.ICollection[$T].Count": {
              "name": "Count",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].IsReadOnly": {
              "name": "IsReadOnly",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "type": "System.Boolean",
              "setter": false,
              "static": false
            },
            "System.Collections.Generic.IList[$T].Item": {
              "name": "Item",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "type": "System.Int32",
              "setter": true,
              "static": false
            }
          },
          "methods": {
            "System.Collections.Generic.ICollection[$T].Add(System.Int32)": {
              "name": "Add",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Clear()": {
              "name": "Clear",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Contains(System.Int32)": {
              "name": "Contains",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].CopyTo(System.Array[System.Int32], System.Int32)": {
              "name": "CopyTo",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "array",
                  "type": "System.Array[System.Int32]",
                  "default": false,
                  "out": false
                },
                {
                  "name": "arrayIndex",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.IEnumerable.GetEnumerator()": {
              "name": "GetEnumerator",
              "declaring_type": "System.Collections.IEnumerable",
              "parameters": [],
              "return_types": [
                "System.Collections.IEnumerator"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].IndexOf(System.Int32)": {
              "name": "IndexOf",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].Insert(System.Int32, System.Int32)": {
              "name": "Insert",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Remove(System.Int32)": {
              "name": "Remove",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].RemoveAt(System.Int32)": {
              "name": "RemoveAt",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].__contains__(System.Int32)": {
              "name": "__contains__",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "value",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].__getitem__(System.Int32)": {
              "name": "__getitem__",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.IEnumerable.__iter__()": {
              "name": "__iter__",
              "declaring_type": "System.Collections.IEnumerable",
              "parameters": [],
              "return_types": [
                "typing.Iterator[System.Object]"
              ],
              "static": false
            },
            "System.Collections.Generic.IEnumerable[$T].__iter__()": {
              "name": "__iter__",
              "declaring_type": "System.Collections.Generic.IEnumerable[$T]",
              "parameters": [],
              "return_types": [
                "typing.Iterator[System.Int32]"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].__len__()": {
              "name": "__len__",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].__setitem__(System.Int32, System.Int32)": {
              "name": "__setitem__",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "value",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithMethods": {
          "type": "class",
          "name": "ClassWithMethods",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithMethods.__init__()": {
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.InstanceMethodWithDefaultParam(System.Int32)": {
              "name": "InstanceMethodWithDefaultParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.InstanceMethodWithNullableDefaultParam(System.Int32?)": {
              "name": "InstanceMethodWithNullableDefaultParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.InstanceMethodWithNullableOutParam(System.*Int32?)": {
              "name": "InstanceMethodWithNullableOutParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32?",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32?"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.InstanceMethodWithNullableParam(System.Int32?)": {
              "name": "InstanceMethodWithNullableParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.InstanceMethodWithOutParam(System.*Int32)": {
              "name": "InstanceMethodWithOutParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.InstanceMethodWithParams0()": {
              "name": "InstanceMethodWithParams0",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.InstanceMethodWithParams1(System.Int32)": {
              "name": "InstanceMethodWithParams1",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.InstanceMethodWithParams2(System.Int32, System.Int32)": {
              "name": "InstanceMethodWithParams2",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.ClassWithMethods.StaticMethodWithDefaultParam(System.Int32)": {
              "name": "StaticMethodWithDefaultParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.ClassWithMethods.StaticMethodWithNullableDefaultParam(System.Int32?)": {
              "name": "StaticMethodWithNullableDefaultParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.ClassWithMethods.StaticMethodWithNullableOutParam(System.*Int32?)": {
              "name": "StaticMethodWithNullableOutParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32?",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32?"
              ],
              "static": true
            },
            "TestLib.ClassWithMethods.StaticMethodWithNullableParam(System.Int32?)": {
              "name": "StaticMethodWithNullableParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.ClassWithMethods.StaticMethodWithOutParam(System.*Int32)": {
              "name": "StaticMethodWithOutParam",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32"
              ],
              "static": true
            },
            "TestLib.ClassWithMethods.StaticMethodWithParams0()": {
              "name": "StaticMethodWithParams0",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.ClassWithMethods.StaticMethodWithParams1(System.Int32)": {
              "name": "StaticMethodWithParams1",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.ClassWithMethods.StaticMethodWithParams2(System.Int32, System.Int32)": {
              "name": "StaticMethodWithParams2",
              "declaring_type": "TestLib.ClassWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithMultiGeneric[$U, $V]": {
          "type": "class",
          "name": "ClassWithMultiGeneric",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [
            "$U",
            "$V"
          ],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithMultiGeneric[$U, $V].__init__()": {
              "declaring_type": "TestLib.ClassWithMultiGeneric[$U, $V]",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithNested": {
          "type": "class",
          "name": "ClassWithNested",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithNested.__init__()": {
              "declaring_type": "TestLib.ClassWithNested",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {
            "TestLib.INestedInterface": {
              "type": "interface",
              "name": "INestedInterface",
              "namespace": "TestLib",
              "generic_args": [],
              "interfaces": [],
              "fields": {},
              "properties": {},
              "methods": {},
              "events": {},
              "nested": {}
            },
            "TestLib.NestedClass": {
              "type": "class",
              "name": "NestedClass",
              "namespace": "TestLib",
              "abstract": false,
              "generic_args": [],
              "super_class": "System.Object",
              "interfaces": [],
              "fields": {},
              "constructors": {
                "TestLib.NestedClass.__init__()": {
                  "declaring_type": "TestLib.NestedClass",
                  "parameters": []
                }
              },
              "properties": {},
              "methods": {
                "System.Object.Equals(System.Object)": {
                  "name": "Equals",
                  "declaring_type": "System.Object",
                  "parameters": [
                    {
                      "name": "obj",
                      "type": "System.Object",
                      "default": false,
                      "out": false
                    }
                  ],
                  "return_types": [
                    "System.Boolean"
                  ],
                  "static": false
                },
                "System.Object.GetHashCode()": {
                  "name": "GetHashCode",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Int32"
                  ],
                  "static": false
                },
                "System.Object.GetType()": {
                  "name": "GetType",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Type"
                  ],
                  "static": false
                },
                "System.Object.ToString()": {
                  "name": "ToString",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.String"
                  ],
                  "static": false
                }
              },
              "events": {},
              "nested": {}
            },
            "TestLib.NestedDelegate": {
              "type": "delegate",
              "name": "NestedDelegate",
              "namespace": "TestLib",
              "parameters": [],
              "return_type": "System.Void"
            },
            "TestLib.NestedEnum": {
              "type": "enum",
              "name": "NestedEnum",
              "namespace": "TestLib",
              "fields": []
            },
            "TestLib.NestedStruct": {
              "type": "struct",
              "name": "NestedStruct",
              "namespace": "TestLib",
              "abstract": false,
              "generic_args": [],
              "super_class": "System.ValueType",
              "interfaces": [],
              "fields": {},
              "constructors": {},
              "properties": {},
              "methods": {
                "System.Object.Equals(System.Object)": {
                  "name": "Equals",
                  "declaring_type": "System.Object",
                  "parameters": [
                    {
                      "name": "obj",
                      "type": "System.Object",
                      "default": false,
                      "out": false
                    }
                  ],
                  "return_types": [
                    "System.Boolean"
                  ],
                  "static": false
                },
                "System.Object.GetHashCode()": {
                  "name": "GetHashCode",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Int32"
                  ],
                  "static": false
                },
                "System.Object.GetType()": {
                  "name": "GetType",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Type"
                  ],
                  "static": false
                },
                "System.Object.ToString()": {
                  "name": "ToString",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.String"
                  ],
                  "static": false
                }
              },
              "events": {},
              "nested": {}
            }
          }
        },
        "TestLib.ClassWithOperatorMethods": {
          "type": "class",
          "name": "ClassWithOperatorMethods",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithOperatorMethods.__init__()": {
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__add__(TestLib.ClassWithOperatorMethods)": {
              "name": "__add__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__and__(TestLib.ClassWithOperatorMethods)": {
              "name": "__and__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__eq__(TestLib.ClassWithOperatorMethods)": {
              "name": "__eq__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__ge__(TestLib.ClassWithOperatorMethods)": {
              "name": "__ge__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__gt__(TestLib.ClassWithOperatorMethods)": {
              "name": "__gt__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__invert__()": {
              "name": "__invert__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__le__(TestLib.ClassWithOperatorMethods)": {
              "name": "__le__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__lt__(TestLib.ClassWithOperatorMethods)": {
              "name": "__lt__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__mod__(TestLib.ClassWithOperatorMethods)": {
              "name": "__mod__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__mul__(TestLib.ClassWithOperatorMethods)": {
              "name": "__mul__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__ne__(TestLib.ClassWithOperatorMethods)": {
              "name": "__ne__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__neg__()": {
              "name": "__neg__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__or__(TestLib.ClassWithOperatorMethods)": {
              "name": "__or__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__pos__()": {
              "name": "__pos__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__sub__(TestLib.ClassWithOperatorMethods)": {
              "name": "__sub__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__truediv__(TestLib.ClassWithOperatorMethods)": {
              "name": "__truediv__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.__xor__(TestLib.ClassWithOperatorMethods)": {
              "name": "__xor__",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.ClassWithOperatorMethods.op_Addition(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_Addition",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_BitwiseAnd(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_BitwiseAnd",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_BitwiseOr(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_BitwiseOr",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_Decrement(TestLib.ClassWithOperatorMethods)": {
              "name": "op_Decrement",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_Division(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_Division",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_Equality(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_Equality",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_ExclusiveOr(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_ExclusiveOr",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_False(TestLib.ClassWithOperatorMethods)": {
              "name": "op_False",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_GreaterThan(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_GreaterThan",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_GreaterThanOrEqual(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_GreaterThanOrEqual",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_Increment(TestLib.ClassWithOperatorMethods)": {
              "name": "op_Increment",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_Inequality(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_Inequality",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_LessThan(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_LessThan",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_LessThanOrEqual(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_LessThanOrEqual",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_LogicalNot(TestLib.ClassWithOperatorMethods)": {
              "name": "op_LogicalNot",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_Modulus(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_Modulus",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_Multiply(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_Multiply",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_OnesComplement(TestLib.ClassWithOperatorMethods)": {
              "name": "op_OnesComplement",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_Subtraction(TestLib.ClassWithOperatorMethods, TestLib.ClassWithOperatorMethods)": {
              "name": "op_Subtraction",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_True(TestLib.ClassWithOperatorMethods)": {
              "name": "op_True",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_UnaryNegation(TestLib.ClassWithOperatorMethods)": {
              "name": "op_UnaryNegation",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.ClassWithOperatorMethods.op_UnaryPlus(TestLib.ClassWithOperatorMethods)": {
              "name": "op_UnaryPlus",
              "declaring_type": "TestLib.ClassWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.ClassWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.ClassWithOperatorMethods"
              ],
              "static": true
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithProperties": {
          "type": "class",
          "name": "ClassWithProperties",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithProperties.__init__()": {
              "declaring_type": "TestLib.ClassWithProperties",
              "parameters": []
            }
          },
          "properties": {
            "TestLib.ClassWithProperties.InstanceProperty0": {
              "name": "InstanceProperty0",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.ClassWithProperties.InstanceProperty1": {
              "name": "InstanceProperty1",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.ClassWithProperties.InstanceProperty2": {
              "name": "InstanceProperty2",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.ClassWithProperties.InstanceReadOnlyProperty0": {
              "name": "InstanceReadOnlyProperty0",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.ClassWithProperties.InstanceReadOnlyProperty1": {
              "name": "InstanceReadOnlyProperty1",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.ClassWithProperties.InstanceReadOnlyProperty2": {
              "name": "InstanceReadOnlyProperty2",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.ClassWithProperties.StaticProperty0": {
              "name": "StaticProperty0",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.ClassWithProperties.StaticProperty1": {
              "name": "StaticProperty1",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.ClassWithProperties.StaticProperty2": {
              "name": "StaticProperty2",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.ClassWithProperties.StaticReadOnlyProperty0": {
              "name": "StaticReadOnlyProperty0",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            },
            "TestLib.ClassWithProperties.StaticReadOnlyProperty1": {
              "name": "StaticReadOnlyProperty1",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            },
            "TestLib.ClassWithProperties.StaticReadOnlyProperty2": {
              "name": "StaticReadOnlyProperty2",
              "declaring_type": "TestLib.ClassWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            }
          },
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithSuper": {
          "type": "class",
          "name": "ClassWithSuper",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "TestLib.ClassThatsAbstract",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.ClassWithSuper.__init__()": {
              "declaring_type": "TestLib.ClassWithSuper",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.ClassWithTypes": {
          "type": "class",
          "name": "ClassWithTypes",
          "namespace": "TestLib",
          "abstract": true,
          "generic_args": [],
          "super_class": "System.Object",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "TestLib.ClassWithTypes.MethodReturnsBoolean()": {
              "name": "MethodReturnsBoolean",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsByte()": {
              "name": "MethodReturnsByte",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Byte"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsChar()": {
              "name": "MethodReturnsChar",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Char"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsDouble()": {
              "name": "MethodReturnsDouble",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Double"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsInt16()": {
              "name": "MethodReturnsInt16",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Int16"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsInt32()": {
              "name": "MethodReturnsInt32",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsInt64()": {
              "name": "MethodReturnsInt64",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Int64"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsObject()": {
              "name": "MethodReturnsObject",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Object"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsSByte()": {
              "name": "MethodReturnsSByte",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.SByte"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsSingle()": {
              "name": "MethodReturnsSingle",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Single"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsString()": {
              "name": "MethodReturnsString",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsUInt16()": {
              "name": "MethodReturnsUInt16",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.UInt16"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsUInt32()": {
              "name": "MethodReturnsUInt32",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.UInt32"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsUInt64()": {
              "name": "MethodReturnsUInt64",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.UInt64"
              ],
              "static": true
            },
            "TestLib.ClassWithTypes.MethodReturnsVoid()": {
              "name": "MethodReturnsVoid",
              "declaring_type": "TestLib.ClassWithTypes",
              "parameters": [],
              "return_types": [
                "System.Void"
              ],
              "static": true
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.DelegateWithNoParametersNoReturn": {
          "type": "delegate",
          "name": "DelegateWithNoParametersNoReturn",
          "namespace": "TestLib",
          "parameters": [],
          "return_type": "System.Void"
        },
        "TestLib.DelegateWithNoParametersReturn": {
          "type": "delegate",
          "name": "DelegateWithNoParametersReturn",
          "namespace": "TestLib",
          "parameters": [],
          "return_type": "System.Int32"
        },
        "TestLib.DelegateWithParametersNoReturn": {
          "type": "delegate",
          "name": "DelegateWithParametersNoReturn",
          "namespace": "TestLib",
          "parameters": [
            {
              "name": "param0",
              "type": "System.Int32",
              "default": false,
              "out": false
            },
            {
              "name": "param1",
              "type": "System.Int32",
              "default": false,
              "out": false
            }
          ],
          "return_type": "System.Void"
        },
        "TestLib.DelegateWithParametersReturn": {
          "type": "delegate",
          "name": "DelegateWithParametersReturn",
          "namespace": "TestLib",
          "parameters": [
            {
              "name": "param0",
              "type": "System.Int32",
              "default": false,
              "out": false
            },
            {
              "name": "param1",
              "type": "System.Int32",
              "default": false,
              "out": false
            }
          ],
          "return_type": "System.Int32"
        },
        "TestLib.EnumWithFields": {
          "type": "enum",
          "name": "EnumWithFields",
          "namespace": "TestLib",
          "fields": [
            "Field0",
            "Field1",
            "Field2",
            "Field3"
          ]
        },
        "TestLib.EnumWithNoFields": {
          "type": "enum",
          "name": "EnumWithNoFields",
          "namespace": "TestLib",
          "fields": []
        },
        "TestLib.IInterfaceWithEvents": {
          "type": "interface",
          "name": "IInterfaceWithEvents",
          "namespace": "TestLib",
          "generic_args": [],
          "interfaces": [],
          "fields": {},
          "properties": {},
          "methods": {},
          "events": {
            "TestLib.IInterfaceWithEvents.Event": {
              "name": "Event",
              "declaring_type": "TestLib.IInterfaceWithEvents",
              "type": "System.EventHandler"
            },
            "TestLib.IInterfaceWithEvents.EventWithArgs": {
              "name": "EventWithArgs",
              "declaring_type": "TestLib.IInterfaceWithEvents",
              "type": "System.EventHandler[System.EventArgs]"
            }
          },
          "nested": {}
        },
        "TestLib.IInterfaceWithFields": {
          "type": "interface",
          "name": "IInterfaceWithFields",
          "namespace": "TestLib",
          "generic_args": [],
          "interfaces": [],
          "fields": {
            "TestLib.IInterfaceWithFields.StaticFieldA": {
              "name": "StaticFieldA",
              "declaring_type": "TestLib.IInterfaceWithFields",
              "return_type": "System.Int32",
              "static": true
            },
            "TestLib.IInterfaceWithFields.StaticFieldB": {
              "name": "StaticFieldB",
              "declaring_type": "TestLib.IInterfaceWithFields",
              "return_type": "System.Int32",
              "static": true
            },
            "TestLib.IInterfaceWithFields.StaticFieldC": {
              "name": "StaticFieldC",
              "declaring_type": "TestLib.IInterfaceWithFields",
              "return_type": "System.Int32",
              "static": true
            }
          },
          "properties": {},
          "methods": {},
          "events": {},
          "nested": {}
        },
        "TestLib.IInterfaceWithGeneric[$T]": {
          "type": "interface",
          "name": "IInterfaceWithGeneric",
          "namespace": "TestLib",
          "generic_args": [
            "$T"
          ],
          "interfaces": [],
          "fields": {},
          "properties": {},
          "methods": {
            "TestLib.IInterfaceWithGeneric[$T].MethodWithGeneric($T)": {
              "name": "MethodWithGeneric",
              "declaring_type": "TestLib.IInterfaceWithGeneric[$T]",
              "parameters": [
                {
                  "name": "param0",
                  "type": "$T",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.IInterfaceWithInterface": {
          "type": "interface",
          "name": "IInterfaceWithInterface",
          "namespace": "TestLib",
          "generic_args": [],
          "interfaces": [
            "System.IEquatable[TestLib.IInterfaceWithInterface]"
          ],
          "fields": {},
          "properties": {},
          "methods": {
            "System.IEquatable[$T].Equals(TestLib.IInterfaceWithInterface)": {
              "name": "Equals",
              "declaring_type": "System.IEquatable[$T]",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithInterface",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.IInterfaceWithListMethods": {
          "type": "interface",
          "name": "IInterfaceWithListMethods",
          "namespace": "TestLib",
          "generic_args": [],
          "interfaces": [
            "System.Collections.Generic.ICollection[System.Int32]",
            "System.Collections.Generic.IEnumerable[System.Int32]",
            "System.Collections.Generic.IList[System.Int32]",
            "System.Collections.IEnumerable"
          ],
          "fields": {},
          "properties": {
            "System.Collections.Generic.ICollection[$T].Count": {
              "name": "Count",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].IsReadOnly": {
              "name": "IsReadOnly",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "type": "System.Boolean",
              "setter": false,
              "static": false
            },
            "System.Collections.Generic.IList[$T].Item": {
              "name": "Item",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "type": "System.Int32",
              "setter": true,
              "static": false
            }
          },
          "methods": {
            "System.Collections.Generic.ICollection[$T].Add(System.Int32)": {
              "name": "Add",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Clear()": {
              "name": "Clear",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Contains(System.Int32)": {
              "name": "Contains",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].CopyTo(System.Array[System.Int32], System.Int32)": {
              "name": "CopyTo",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "array",
                  "type": "System.Array[System.Int32]",
                  "default": false,
                  "out": false
                },
                {
                  "name": "arrayIndex",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.IEnumerable.GetEnumerator()": {
              "name": "GetEnumerator",
              "declaring_type": "System.Collections.IEnumerable",
              "parameters": [],
              "return_types": [
                "System.Collections.IEnumerator"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].IndexOf(System.Int32)": {
              "name": "IndexOf",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].Insert(System.Int32, System.Int32)": {
              "name": "Insert",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Remove(System.Int32)": {
              "name": "Remove",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].RemoveAt(System.Int32)": {
              "name": "RemoveAt",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].__contains__(System.Int32)": {
              "name": "__contains__",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "value",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].__getitem__(System.Int32)": {
              "name": "__getitem__",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.IEnumerable.__iter__()": {
              "name": "__iter__",
              "declaring_type": "System.Collections.IEnumerable",
              "parameters": [],
              "return_types": [
                "typing.Iterator[System.Object]"
              ],
              "static": false
            },
            "System.Collections.Generic.IEnumerable[$T].__iter__()": {
              "name": "__iter__",
              "declaring_type": "System.Collections.Generic.IEnumerable[$T]",
              "parameters": [],
              "return_types": [
                "typing.Iterator[System.Int32]"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].__len__()": {
              "name": "__len__",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].__setitem__(System.Int32, System.Int32)": {
              "name": "__setitem__",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "value",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.IInterfaceWithMethods": {
          "type": "interface",
          "name": "IInterfaceWithMethods",
          "namespace": "TestLib",
          "generic_args": [],
          "interfaces": [],
          "fields": {},
          "properties": {},
          "methods": {
            "TestLib.IInterfaceWithMethods.InstanceMethodWithDefaultParam(System.Int32)": {
              "name": "InstanceMethodWithDefaultParam",
              "declaring_type": "TestLib.IInterfaceWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithMethods.InstanceMethodWithNullableDefaultParam(System.Int32?)": {
              "name": "InstanceMethodWithNullableDefaultParam",
              "declaring_type": "TestLib.IInterfaceWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithMethods.InstanceMethodWithNullableOutParam(System.*Int32?)": {
              "name": "InstanceMethodWithNullableOutParam",
              "declaring_type": "TestLib.IInterfaceWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32?",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32?"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithMethods.InstanceMethodWithNullableParam(System.Int32?)": {
              "name": "InstanceMethodWithNullableParam",
              "declaring_type": "TestLib.IInterfaceWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithMethods.InstanceMethodWithOutParam(System.*Int32)": {
              "name": "InstanceMethodWithOutParam",
              "declaring_type": "TestLib.IInterfaceWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithMethods.InstanceMethodWithParams()": {
              "name": "InstanceMethodWithParams",
              "declaring_type": "TestLib.IInterfaceWithMethods",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithMethods.InstanceMethodWithParams(System.Int32)": {
              "name": "InstanceMethodWithParams",
              "declaring_type": "TestLib.IInterfaceWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithMethods.InstanceMethodWithParams(System.Int32, System.Int32)": {
              "name": "InstanceMethodWithParams",
              "declaring_type": "TestLib.IInterfaceWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.IInterfaceWithMultiGeneric[$U, $V]": {
          "type": "interface",
          "name": "IInterfaceWithMultiGeneric",
          "namespace": "TestLib",
          "generic_args": [
            "$U",
            "$V"
          ],
          "interfaces": [],
          "fields": {},
          "properties": {},
          "methods": {},
          "events": {},
          "nested": {}
        },
        "TestLib.IInterfaceWithNested": {
          "type": "interface",
          "name": "IInterfaceWithNested",
          "namespace": "TestLib",
          "generic_args": [],
          "interfaces": [],
          "fields": {},
          "properties": {},
          "methods": {},
          "events": {},
          "nested": {
            "TestLib.INestedInterface": {
              "type": "interface",
              "name": "INestedInterface",
              "namespace": "TestLib",
              "generic_args": [],
              "interfaces": [],
              "fields": {},
              "properties": {},
              "methods": {},
              "events": {},
              "nested": {}
            },
            "TestLib.NestedClass": {
              "type": "class",
              "name": "NestedClass",
              "namespace": "TestLib",
              "abstract": false,
              "generic_args": [],
              "super_class": "System.Object",
              "interfaces": [],
              "fields": {},
              "constructors": {
                "TestLib.NestedClass.__init__()": {
                  "declaring_type": "TestLib.NestedClass",
                  "parameters": []
                }
              },
              "properties": {},
              "methods": {
                "System.Object.Equals(System.Object)": {
                  "name": "Equals",
                  "declaring_type": "System.Object",
                  "parameters": [
                    {
                      "name": "obj",
                      "type": "System.Object",
                      "default": false,
                      "out": false
                    }
                  ],
                  "return_types": [
                    "System.Boolean"
                  ],
                  "static": false
                },
                "System.Object.GetHashCode()": {
                  "name": "GetHashCode",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Int32"
                  ],
                  "static": false
                },
                "System.Object.GetType()": {
                  "name": "GetType",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Type"
                  ],
                  "static": false
                },
                "System.Object.ToString()": {
                  "name": "ToString",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.String"
                  ],
                  "static": false
                }
              },
              "events": {},
              "nested": {}
            },
            "TestLib.NestedDelegate": {
              "type": "delegate",
              "name": "NestedDelegate",
              "namespace": "TestLib",
              "parameters": [],
              "return_type": "System.Void"
            },
            "TestLib.NestedEnum": {
              "type": "enum",
              "name": "NestedEnum",
              "namespace": "TestLib",
              "fields": []
            },
            "TestLib.NestedStruct": {
              "type": "struct",
              "name": "NestedStruct",
              "namespace": "TestLib",
              "abstract": false,
              "generic_args": [],
              "super_class": "System.ValueType",
              "interfaces": [],
              "fields": {},
              "constructors": {},
              "properties": {},
              "methods": {
                "System.Object.Equals(System.Object)": {
                  "name": "Equals",
                  "declaring_type": "System.Object",
                  "parameters": [
                    {
                      "name": "obj",
                      "type": "System.Object",
                      "default": false,
                      "out": false
                    }
                  ],
                  "return_types": [
                    "System.Boolean"
                  ],
                  "static": false
                },
                "System.Object.GetHashCode()": {
                  "name": "GetHashCode",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Int32"
                  ],
                  "static": false
                },
                "System.Object.GetType()": {
                  "name": "GetType",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Type"
                  ],
                  "static": false
                },
                "System.Object.ToString()": {
                  "name": "ToString",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.String"
                  ],
                  "static": false
                }
              },
              "events": {},
              "nested": {}
            }
          }
        },
        "TestLib.IInterfaceWithOperatorMethods": {
          "type": "interface",
          "name": "IInterfaceWithOperatorMethods",
          "namespace": "TestLib",
          "generic_args": [],
          "interfaces": [],
          "fields": {},
          "properties": {},
          "methods": {
            "TestLib.IInterfaceWithOperatorMethods.__add__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__add__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__and__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__and__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__ge__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__ge__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__gt__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__gt__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__invert__()": {
              "name": "__invert__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__le__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__le__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__lt__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__lt__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__mod__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__mod__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__mul__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__mul__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__neg__()": {
              "name": "__neg__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__or__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__or__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__pos__()": {
              "name": "__pos__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__sub__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__sub__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__truediv__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__truediv__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.__xor__(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "__xor__",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.IInterfaceWithOperatorMethods.op_Addition(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_Addition",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_BitwiseAnd(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_BitwiseAnd",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_BitwiseOr(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_BitwiseOr",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_Decrement(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_Decrement",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_Division(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_Division",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_ExclusiveOr(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_ExclusiveOr",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_False(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_False",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_GreaterThan(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_GreaterThan",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_GreaterThanOrEqual(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_GreaterThanOrEqual",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_Increment(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_Increment",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_LessThan(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_LessThan",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_LessThanOrEqual(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_LessThanOrEqual",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_LogicalNot(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_LogicalNot",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_Modulus(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_Modulus",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_Multiply(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_Multiply",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_OnesComplement(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_OnesComplement",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_Subtraction(TestLib.IInterfaceWithOperatorMethods, TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_Subtraction",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_True(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_True",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_UnaryNegation(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_UnaryNegation",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.IInterfaceWithOperatorMethods.op_UnaryPlus(TestLib.IInterfaceWithOperatorMethods)": {
              "name": "op_UnaryPlus",
              "declaring_type": "TestLib.IInterfaceWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.IInterfaceWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.IInterfaceWithOperatorMethods"
              ],
              "static": true
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.IInterfaceWithProperties": {
          "type": "interface",
          "name": "IInterfaceWithProperties",
          "namespace": "TestLib",
          "generic_args": [],
          "interfaces": [],
          "fields": {},
          "properties": {
            "TestLib.IInterfaceWithProperties.InstanceProperty0": {
              "name": "InstanceProperty0",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.IInterfaceWithProperties.InstanceProperty1": {
              "name": "InstanceProperty1",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.IInterfaceWithProperties.InstanceProperty2": {
              "name": "InstanceProperty2",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.IInterfaceWithProperties.InstanceReadOnlyProperty0": {
              "name": "InstanceReadOnlyProperty0",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.IInterfaceWithProperties.InstanceReadOnlyProperty1": {
              "name": "InstanceReadOnlyProperty1",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.IInterfaceWithProperties.InstanceReadOnlyProperty2": {
              "name": "InstanceReadOnlyProperty2",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.IInterfaceWithProperties.StaticProperty0": {
              "name": "StaticProperty0",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.IInterfaceWithProperties.StaticProperty1": {
              "name": "StaticProperty1",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.IInterfaceWithProperties.StaticProperty2": {
              "name": "StaticProperty2",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.IInterfaceWithProperties.StaticReadOnlyProperty0": {
              "name": "StaticReadOnlyProperty0",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            },
            "TestLib.IInterfaceWithProperties.StaticReadOnlyProperty1": {
              "name": "StaticReadOnlyProperty1",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            },
            "TestLib.IInterfaceWithProperties.StaticReadOnlyProperty2": {
              "name": "StaticReadOnlyProperty2",
              "declaring_type": "TestLib.IInterfaceWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            }
          },
          "methods": {},
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithConstructors": {
          "type": "struct",
          "name": "StructWithConstructors",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {},
          "constructors": {
            "TestLib.StructWithConstructors.__init__()": {
              "declaring_type": "TestLib.StructWithConstructors",
              "parameters": []
            },
            "TestLib.StructWithConstructors.__init__(System.Int32)": {
              "declaring_type": "TestLib.StructWithConstructors",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ]
            },
            "TestLib.StructWithConstructors.__init__(System.Int32, System.Int32)": {
              "declaring_type": "TestLib.StructWithConstructors",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ]
            },
            "TestLib.StructWithConstructors.__init__(System.Int32, System.Int32, System.Int32)": {
              "declaring_type": "TestLib.StructWithConstructors",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param2",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ]
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithEvents": {
          "type": "struct",
          "name": "StructWithEvents",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {
            "TestLib.StructWithEvents.Event": {
              "name": "Event",
              "declaring_type": "TestLib.StructWithEvents",
              "type": "System.EventHandler"
            },
            "TestLib.StructWithEvents.EventWithArgs": {
              "name": "EventWithArgs",
              "declaring_type": "TestLib.StructWithEvents",
              "type": "System.EventHandler[System.EventArgs]"
            }
          },
          "nested": {}
        },
        "TestLib.StructWithFields": {
          "type": "struct",
          "name": "StructWithFields",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {
            "TestLib.StructWithFields.InstanceFieldA": {
              "name": "InstanceFieldA",
              "declaring_type": "TestLib.StructWithFields",
              "return_type": "System.Int32",
              "static": false
            },
            "TestLib.StructWithFields.InstanceFieldB": {
              "name": "InstanceFieldB",
              "declaring_type": "TestLib.StructWithFields",
              "return_type": "System.Int32",
              "static": false
            },
            "TestLib.StructWithFields.InstanceFieldC": {
              "name": "InstanceFieldC",
              "declaring_type": "TestLib.StructWithFields",
              "return_type": "System.Int32",
              "static": false
            },
            "TestLib.StructWithFields.StaticFieldA": {
              "name": "StaticFieldA",
              "declaring_type": "TestLib.StructWithFields",
              "return_type": "System.Int32",
              "static": true
            },
            "TestLib.StructWithFields.StaticFieldB": {
              "name": "StaticFieldB",
              "declaring_type": "TestLib.StructWithFields",
              "return_type": "System.Int32",
              "static": true
            },
            "TestLib.StructWithFields.StaticFieldC": {
              "name": "StaticFieldC",
              "declaring_type": "TestLib.StructWithFields",
              "return_type": "System.Int32",
              "static": true
            }
          },
          "constructors": {
            "TestLib.StructWithFields.__init__()": {
              "declaring_type": "TestLib.StructWithFields",
              "parameters": []
            }
          },
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithGeneric[$T]": {
          "type": "struct",
          "name": "StructWithGeneric",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [
            "$T"
          ],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "TestLib.StructWithGeneric[$T].MethodWithGeneric($T)": {
              "name": "MethodWithGeneric",
              "declaring_type": "TestLib.StructWithGeneric[$T]",
              "parameters": [
                {
                  "name": "param0",
                  "type": "$T",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithInterface": {
          "type": "struct",
          "name": "StructWithInterface",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [
            "System.IEquatable[TestLib.StructWithInterface]"
          ],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.IEquatable[$T].Equals(TestLib.StructWithInterface)": {
              "name": "Equals",
              "declaring_type": "System.IEquatable[$T]",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithInterface",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithInterface.Equals(TestLib.StructWithInterface?)": {
              "name": "Equals",
              "declaring_type": "TestLib.StructWithInterface",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithInterface?",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            },
            "TestLib.StructWithInterface.__eq__(TestLib.StructWithInterface)": {
              "name": "__eq__",
              "declaring_type": "TestLib.StructWithInterface",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithInterface",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithInterface.__ne__(TestLib.StructWithInterface)": {
              "name": "__ne__",
              "declaring_type": "TestLib.StructWithInterface",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithInterface",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithInterface.op_Equality(TestLib.StructWithInterface, TestLib.StructWithInterface)": {
              "name": "op_Equality",
              "declaring_type": "TestLib.StructWithInterface",
              "parameters": [
                {
                  "name": "left",
                  "type": "TestLib.StructWithInterface",
                  "default": false,
                  "out": false
                },
                {
                  "name": "right",
                  "type": "TestLib.StructWithInterface",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithInterface.op_Inequality(TestLib.StructWithInterface, TestLib.StructWithInterface)": {
              "name": "op_Inequality",
              "declaring_type": "TestLib.StructWithInterface",
              "parameters": [
                {
                  "name": "left",
                  "type": "TestLib.StructWithInterface",
                  "default": false,
                  "out": false
                },
                {
                  "name": "right",
                  "type": "TestLib.StructWithInterface",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithListMethods": {
          "type": "struct",
          "name": "StructWithListMethods",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [
            "System.Collections.Generic.ICollection[System.Int32]",
            "System.Collections.Generic.IEnumerable[System.Int32]",
            "System.Collections.Generic.IList[System.Int32]",
            "System.Collections.IEnumerable"
          ],
          "fields": {},
          "constructors": {},
          "properties": {
            "System.Collections.Generic.ICollection[$T].Count": {
              "name": "Count",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].IsReadOnly": {
              "name": "IsReadOnly",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "type": "System.Boolean",
              "setter": false,
              "static": false
            },
            "System.Collections.Generic.IList[$T].Item": {
              "name": "Item",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "type": "System.Int32",
              "setter": true,
              "static": false
            }
          },
          "methods": {
            "System.Collections.Generic.ICollection[$T].Add(System.Int32)": {
              "name": "Add",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Clear()": {
              "name": "Clear",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Contains(System.Int32)": {
              "name": "Contains",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].CopyTo(System.Array[System.Int32], System.Int32)": {
              "name": "CopyTo",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "array",
                  "type": "System.Array[System.Int32]",
                  "default": false,
                  "out": false
                },
                {
                  "name": "arrayIndex",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.IEnumerable.GetEnumerator()": {
              "name": "GetEnumerator",
              "declaring_type": "System.Collections.IEnumerable",
              "parameters": [],
              "return_types": [
                "System.Collections.IEnumerator"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].IndexOf(System.Int32)": {
              "name": "IndexOf",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].Insert(System.Int32, System.Int32)": {
              "name": "Insert",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].Remove(System.Int32)": {
              "name": "Remove",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "item",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].RemoveAt(System.Int32)": {
              "name": "RemoveAt",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].__contains__(System.Int32)": {
              "name": "__contains__",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [
                {
                  "name": "value",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].__getitem__(System.Int32)": {
              "name": "__getitem__",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.IEnumerable.__iter__()": {
              "name": "__iter__",
              "declaring_type": "System.Collections.IEnumerable",
              "parameters": [],
              "return_types": [
                "typing.Iterator[System.Object]"
              ],
              "static": false
            },
            "System.Collections.Generic.IEnumerable[$T].__iter__()": {
              "name": "__iter__",
              "declaring_type": "System.Collections.Generic.IEnumerable[$T]",
              "parameters": [],
              "return_types": [
                "typing.Iterator[System.Int32]"
              ],
              "static": false
            },
            "System.Collections.Generic.ICollection[$T].__len__()": {
              "name": "__len__",
              "declaring_type": "System.Collections.Generic.ICollection[$T]",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Collections.Generic.IList[$T].__setitem__(System.Int32, System.Int32)": {
              "name": "__setitem__",
              "declaring_type": "System.Collections.Generic.IList[$T]",
              "parameters": [
                {
                  "name": "index",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "value",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Void"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithMethods": {
          "type": "struct",
          "name": "StructWithMethods",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.InstanceMethodWithDefaultParam(System.Int32)": {
              "name": "InstanceMethodWithDefaultParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.InstanceMethodWithNullableDefaultParam(System.Int32?)": {
              "name": "InstanceMethodWithNullableDefaultParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.InstanceMethodWithNullableOutParam(System.*Int32?)": {
              "name": "InstanceMethodWithNullableOutParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32?",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32?"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.InstanceMethodWithNullableParam(System.Int32?)": {
              "name": "InstanceMethodWithNullableParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.InstanceMethodWithOutParam(System.*Int32)": {
              "name": "InstanceMethodWithOutParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.InstanceMethodWithParams0()": {
              "name": "InstanceMethodWithParams0",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.InstanceMethodWithParams1(System.Int32)": {
              "name": "InstanceMethodWithParams1",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.InstanceMethodWithParams2(System.Int32, System.Int32)": {
              "name": "InstanceMethodWithParams2",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "TestLib.StructWithMethods.StaticMethodWithDefaultParam(System.Int32)": {
              "name": "StaticMethodWithDefaultParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.StructWithMethods.StaticMethodWithNullableDefaultParam(System.Int32?)": {
              "name": "StaticMethodWithNullableDefaultParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": true,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.StructWithMethods.StaticMethodWithNullableOutParam(System.*Int32?)": {
              "name": "StaticMethodWithNullableOutParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32?",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32?"
              ],
              "static": true
            },
            "TestLib.StructWithMethods.StaticMethodWithNullableParam(System.Int32?)": {
              "name": "StaticMethodWithNullableParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32?",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.StructWithMethods.StaticMethodWithOutParam(System.*Int32)": {
              "name": "StaticMethodWithOutParam",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.*Int32",
                  "default": false,
                  "out": true
                }
              ],
              "return_types": [
                "System.Int32",
                "System.*Int32"
              ],
              "static": true
            },
            "TestLib.StructWithMethods.StaticMethodWithParams0()": {
              "name": "StaticMethodWithParams0",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.StructWithMethods.StaticMethodWithParams1(System.Int32)": {
              "name": "StaticMethodWithParams1",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "TestLib.StructWithMethods.StaticMethodWithParams2(System.Int32, System.Int32)": {
              "name": "StaticMethodWithParams2",
              "declaring_type": "TestLib.StructWithMethods",
              "parameters": [
                {
                  "name": "param0",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                },
                {
                  "name": "param1",
                  "type": "System.Int32",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Int32"
              ],
              "static": true
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithMultiGeneric[$U, $V]": {
          "type": "struct",
          "name": "StructWithMultiGeneric",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [
            "$U",
            "$V"
          ],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithNested": {
          "type": "struct",
          "name": "StructWithNested",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {
            "TestLib.INestedInterface": {
              "type": "interface",
              "name": "INestedInterface",
              "namespace": "TestLib",
              "generic_args": [],
              "interfaces": [],
              "fields": {},
              "properties": {},
              "methods": {},
              "events": {},
              "nested": {}
            },
            "TestLib.NestedClass": {
              "type": "class",
              "name": "NestedClass",
              "namespace": "TestLib",
              "abstract": false,
              "generic_args": [],
              "super_class": "System.Object",
              "interfaces": [],
              "fields": {},
              "constructors": {
                "TestLib.NestedClass.__init__()": {
                  "declaring_type": "TestLib.NestedClass",
                  "parameters": []
                }
              },
              "properties": {},
              "methods": {
                "System.Object.Equals(System.Object)": {
                  "name": "Equals",
                  "declaring_type": "System.Object",
                  "parameters": [
                    {
                      "name": "obj",
                      "type": "System.Object",
                      "default": false,
                      "out": false
                    }
                  ],
                  "return_types": [
                    "System.Boolean"
                  ],
                  "static": false
                },
                "System.Object.GetHashCode()": {
                  "name": "GetHashCode",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Int32"
                  ],
                  "static": false
                },
                "System.Object.GetType()": {
                  "name": "GetType",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Type"
                  ],
                  "static": false
                },
                "System.Object.ToString()": {
                  "name": "ToString",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.String"
                  ],
                  "static": false
                }
              },
              "events": {},
              "nested": {}
            },
            "TestLib.NestedDelegate": {
              "type": "delegate",
              "name": "NestedDelegate",
              "namespace": "TestLib",
              "parameters": [],
              "return_type": "System.Void"
            },
            "TestLib.NestedEnum": {
              "type": "enum",
              "name": "NestedEnum",
              "namespace": "TestLib",
              "fields": []
            },
            "TestLib.NestedStruct": {
              "type": "struct",
              "name": "NestedStruct",
              "namespace": "TestLib",
              "abstract": false,
              "generic_args": [],
              "super_class": "System.ValueType",
              "interfaces": [],
              "fields": {},
              "constructors": {},
              "properties": {},
              "methods": {
                "System.Object.Equals(System.Object)": {
                  "name": "Equals",
                  "declaring_type": "System.Object",
                  "parameters": [
                    {
                      "name": "obj",
                      "type": "System.Object",
                      "default": false,
                      "out": false
                    }
                  ],
                  "return_types": [
                    "System.Boolean"
                  ],
                  "static": false
                },
                "System.Object.GetHashCode()": {
                  "name": "GetHashCode",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Int32"
                  ],
                  "static": false
                },
                "System.Object.GetType()": {
                  "name": "GetType",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.Type"
                  ],
                  "static": false
                },
                "System.Object.ToString()": {
                  "name": "ToString",
                  "declaring_type": "System.Object",
                  "parameters": [],
                  "return_types": [
                    "System.String"
                  ],
                  "static": false
                }
              },
              "events": {},
              "nested": {}
            }
          }
        },
        "TestLib.StructWithOperatorMethods": {
          "type": "struct",
          "name": "StructWithOperatorMethods",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {},
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__add__(TestLib.StructWithOperatorMethods)": {
              "name": "__add__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__and__(TestLib.StructWithOperatorMethods)": {
              "name": "__and__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__eq__(TestLib.StructWithOperatorMethods)": {
              "name": "__eq__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__ge__(TestLib.StructWithOperatorMethods)": {
              "name": "__ge__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__gt__(TestLib.StructWithOperatorMethods)": {
              "name": "__gt__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__invert__()": {
              "name": "__invert__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__le__(TestLib.StructWithOperatorMethods)": {
              "name": "__le__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__lt__(TestLib.StructWithOperatorMethods)": {
              "name": "__lt__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__mod__(TestLib.StructWithOperatorMethods)": {
              "name": "__mod__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__mul__(TestLib.StructWithOperatorMethods)": {
              "name": "__mul__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__ne__(TestLib.StructWithOperatorMethods)": {
              "name": "__ne__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__neg__()": {
              "name": "__neg__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__or__(TestLib.StructWithOperatorMethods)": {
              "name": "__or__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__pos__()": {
              "name": "__pos__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__sub__(TestLib.StructWithOperatorMethods)": {
              "name": "__sub__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__truediv__(TestLib.StructWithOperatorMethods)": {
              "name": "__truediv__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.__xor__(TestLib.StructWithOperatorMethods)": {
              "name": "__xor__",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": false
            },
            "TestLib.StructWithOperatorMethods.op_Addition(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_Addition",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_BitwiseAnd(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_BitwiseAnd",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_BitwiseOr(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_BitwiseOr",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_Decrement(TestLib.StructWithOperatorMethods)": {
              "name": "op_Decrement",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_Division(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_Division",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_Equality(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_Equality",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_ExclusiveOr(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_ExclusiveOr",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_False(TestLib.StructWithOperatorMethods)": {
              "name": "op_False",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_GreaterThan(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_GreaterThan",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_GreaterThanOrEqual(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_GreaterThanOrEqual",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_Increment(TestLib.StructWithOperatorMethods)": {
              "name": "op_Increment",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_Inequality(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_Inequality",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_LessThan(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_LessThan",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_LessThanOrEqual(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_LessThanOrEqual",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_LogicalNot(TestLib.StructWithOperatorMethods)": {
              "name": "op_LogicalNot",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_Modulus(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_Modulus",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_Multiply(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_Multiply",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_OnesComplement(TestLib.StructWithOperatorMethods)": {
              "name": "op_OnesComplement",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_Subtraction(TestLib.StructWithOperatorMethods, TestLib.StructWithOperatorMethods)": {
              "name": "op_Subtraction",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                },
                {
                  "name": "other",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_True(TestLib.StructWithOperatorMethods)": {
              "name": "op_True",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_UnaryNegation(TestLib.StructWithOperatorMethods)": {
              "name": "op_UnaryNegation",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            },
            "TestLib.StructWithOperatorMethods.op_UnaryPlus(TestLib.StructWithOperatorMethods)": {
              "name": "op_UnaryPlus",
              "declaring_type": "TestLib.StructWithOperatorMethods",
              "parameters": [
                {
                  "name": "self",
                  "type": "TestLib.StructWithOperatorMethods",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "TestLib.StructWithOperatorMethods"
              ],
              "static": true
            }
          },
          "events": {},
          "nested": {}
        },
        "TestLib.StructWithProperties": {
          "type": "struct",
          "name": "StructWithProperties",
          "namespace": "TestLib",
          "abstract": false,
          "generic_args": [],
          "super_class": "System.ValueType",
          "interfaces": [],
          "fields": {},
          "constructors": {},
          "properties": {
            "TestLib.StructWithProperties.InstanceProperty0": {
              "name": "InstanceProperty0",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.StructWithProperties.InstanceProperty1": {
              "name": "InstanceProperty1",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.StructWithProperties.InstanceProperty2": {
              "name": "InstanceProperty2",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": false
            },
            "TestLib.StructWithProperties.InstanceReadOnlyProperty0": {
              "name": "InstanceReadOnlyProperty0",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.StructWithProperties.InstanceReadOnlyProperty1": {
              "name": "InstanceReadOnlyProperty1",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.StructWithProperties.InstanceReadOnlyProperty2": {
              "name": "InstanceReadOnlyProperty2",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": false
            },
            "TestLib.StructWithProperties.StaticProperty0": {
              "name": "StaticProperty0",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.StructWithProperties.StaticProperty1": {
              "name": "StaticProperty1",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.StructWithProperties.StaticProperty2": {
              "name": "StaticProperty2",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": true,
              "static": true
            },
            "TestLib.StructWithProperties.StaticReadOnlyProperty0": {
              "name": "StaticReadOnlyProperty0",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            },
            "TestLib.StructWithProperties.StaticReadOnlyProperty1": {
              "name": "StaticReadOnlyProperty1",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            },
            "TestLib.StructWithProperties.StaticReadOnlyProperty2": {
              "name": "StaticReadOnlyProperty2",
              "declaring_type": "TestLib.StructWithProperties",
              "type": "System.Int32",
              "setter": false,
              "static": true
            }
          },
          "methods": {
            "System.Object.Equals(System.Object)": {
              "name": "Equals",
              "declaring_type": "System.Object",
              "parameters": [
                {
                  "name": "obj",
                  "type": "System.Object",
                  "default": false,
                  "out": false
                }
              ],
              "return_types": [
                "System.Boolean"
              ],
              "static": false
            },
            "System.Object.GetHashCode()": {
              "name": "GetHashCode",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Int32"
              ],
              "static": false
            },
            "System.Object.GetType()": {
              "name": "GetType",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.Type"
              ],
              "static": false
            },
            "System.Object.ToString()": {
              "name": "ToString",
              "declaring_type": "System.Object",
              "parameters": [],
              "return_types": [
                "System.String"
              ],
              "static": false
            }
          },
          "events": {},
          "nested": {}
        }
      }
    }
  }
}
